# Generated by Django 3.1.1 on 2021-02-21 10:14
import logging
import re
from collections.abc import Iterable

from django.db import migrations

logger = logging.getLogger('sentence_highlight')


def add_highlight(s, *targets, add_all=False):
    """ returns (text, highlight_text)"""
    # if already manually highlighted, do nothing
    if re.search(r"<.*?>", s):
        return re.sub(r"<(.*?)>", r"\1", s), s
    highlight_s = s
    for target in targets:
        if not isinstance(target, Iterable):
            target = [target]
        tot_sub = 0
        for t in target:
            highlight_s, num_sub = re.subn(f"({re.escape(t.strip())})", r'<\1>',
                                           highlight_s, flags=re.IGNORECASE)
            tot_sub += num_sub
        if tot_sub and not add_all:
            return s, highlight_s
    return s, highlight_s


def forward(apps, schema_editor):
    Sentence = apps.get_model('content', 'Sentence')
    sentences = Sentence.objects.exclude(translation_highlight__contains='<')
    for instance in sentences:
        translation, instance.translation_highlight = \
            add_highlight(
                instance.translation,
                *list(map(
                    lambda s: s.split(','),
                    instance.word.definitions.values_list(
                        'definition', flat=True)))
            )
        if translation != instance.translation_highlight:
            logger.info(
                f"{instance.word.chinese} "
                f"'{'; '.join(map(lambda d: d.definition, instance.word.definitions.all()))}'"
                f" change from "
                f"'{translation}' to '{instance.translation_highlight}'")


def backward(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('content', '0060_auto_20210218_1437'),
    ]

    operations = [
        migrations.RunPython(forward, backward, elidable=True)
    ]
